<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="movie">
	<insert id="insertMovie" parameterType="movie">
	insert into movie_tbl values
	(movie_seq.nextval, #{movieTitle}, #{movieDirector}, #{movieActor}, #{movieGenre}, #{movieTime}, #{movieDate}, #{movieRating}, #{movieContent}, #{filmSociety}, #{classicSociety}, #{specialMovie}, 'admin', #{movieType})
	
	<selectKey resultType="_int" order="AFTER" keyProperty="movieNo">
		select max(movie_no) from movie_tbl
	</selectKey>
	</insert>
	<insert id="insertMainFile" parameterType="movieFile">
		insert into movie_file values(movie_file_seq.nextval, #{movieFileName}, #{movieFilePath}, '메인', #{movieNo})
	</insert>
	<insert id="insertPostFile" parameterType="movieFile">
		insert into movie_file values(movie_file_seq.nextval, #{movieFileName}, #{movieFilePath}, '포스트', #{movieNo})
	</insert>
	<insert id="insertmovieVideo" parameterType="movieVideo">
		insert into movie_video values(movie_video_seq.nextval, #{videoLink}, #{movieNo})
	</insert>
	<select id="movieList" resultType="movie">
		select * from movie_tbl
	</select>
	<select id="selectMovieAll" resultType="movie">
		select 
		 	movie_no as movieNo,
			movie_title as movieTitle,
			movie_director as movieDirector,
			movie_actor as movieActor,
			movie_genre as movieGenre,
			movie_time as movieTime,
			to_char(movie_date,'yyyy-mm-dd')  as movieDate,
			movie_rating as movieRating,
			movie_content as movieContent,
			film_society as filmSociety,
			classic_society as classicSociety,
			special_movie as specialMovie,
			enroll_member as enrollMember,
			movie_type as movieType
		 from movie_tbl
	</select>
	<select id="selectMovieFile" resultType="movieFile" parameterType="_int">
			select 
			movie_file_no as movieFileNo,
			movie_file_name as movieFileName,
			movie_file_path as movieFilePath,
			movie_file_category as movieFileCategory,
			movie_no as movieNo
			from movie_file where movie_file_category='메인' and movie_no=#{movieNo}
	</select>
	<select id="selectOneMovie" parameterType="_int" resultType="movie">
				select
			 	movie_no as movieNo,
				movie_title as movieTitle,
				movie_director as movieDirector,
				movie_actor as movieActor,
				movie_genre as movieGenre,
				movie_time as movieTime,
				to_char(movie_date,'yyyy-mm-dd')  as movieDate,
				movie_rating as movieRating,
				movie_content as movieContent,
				film_society as filmSociety,
				classic_society as classicSociety,
				special_movie as specialMovie,
				enroll_member as enrollMember,
				movie_type as movieType
			 from movie_tbl where movie_no=#{movieNo}
		</select>
	<select id="selectOneMovieVideo" parameterType="_int" resultType="movieVideo">
		select 
			movie_video_no as videoNo,
			movie_video_link as videoLink
		from movie_video where movie_no=#{movieNo}
	</select>
	<insert id="insertReview" parameterType="review" >
		insert into review values(review_seq.nextval,#{movieNo},#{reviewContent},#{movieScore},to_char(sysdate,'yyyy-mm-dd'),#{memberId})
		<selectKey  resultType="_int" order="AFTER" keyProperty="reviewCommentNo">
			select max(review_comment_no) from review
		</selectKey>		
	</insert>
	<insert id="insertWatchPoint" parameterType="reviewWatch" >
		insert into watch_point values(watch_point_seq.nextval,#{reviewCommentNo},#{story},#{actor},#{ost},#{videoVisual},#{production})
	</insert>
	<select id="getOneReview" parameterType="String" resultType="review">
		select
			member_id as memberId
		from
			review
		where
			member_id = #{memberId}
	</select>
	<select id="oneMovieAllReview" parameterType="_int" resultType="review">
		select
			review_comment_no as reviewCommentNo,
			movie_no as movieNo,
			review_content as reviewContent,
			movie_score as movieScore,
			review_date as reviewDate,
			member_id as memberId,
			watch_point_no as watchPointNo,
			review_comment_no as reviewCommentNo,
			story as story,
			actor as actor,
			ost as ost,
			video_visual as videoVisual,
			production as production
		from review join watch_point using(review_comment_no)
		where movie_no=#{movieNo}
	
	</select>
	<select id="watchPointAll" parameterType="_int" resultType="reviewWatch">
		select
			watch_point_no as watchPointNo,
			review_comment_no as reviewCommentNo,
			story as story,
			actor as actor,
			ost as ost,
			video_visual as videoVisual,
			production as production
		from watch_point 
		where review_comment_No = #{reviewCommentNo}
	
	</select>
	
	
	
</mapper>
