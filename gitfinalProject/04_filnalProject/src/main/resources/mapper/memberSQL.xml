<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">

<!-- 로그인 -->
<select id="selectOneMember" parameterType="m" resultType="m">
  	select 
  		member_no as memberNo,
  		member_id as memberId,
  		member_pw  as memberPw,
  		member_name as memberName,
  		member_phone as memberPhone,
  		member_birth_year as memberBirthYear,
  		member_birth_month as memberBirthMonth,
  		member_birth_day as memberBirthDay,
  		member_email as memberEmail,
  		member_level as memberLevel,
  		enroll_date as enrollDate,
  		member_gender as memberGender,
  		member_filename as memberFilename,
  		member_filepath as memberFilepath,
  		social as social
  	from member where member_id=#{memberId} and member_pw=#{memberPw}
  </select>
  
  <!-- 회원가입 -->
  <insert id="insertMember" parameterType="m">
  	insert into member values
  	(member_seq.nextval, #{memberId}, #{memberPw}, #{memberName}, #{memberPhone}, #{memberBirthYear}, #{memberBirthMonth}, #{memberBirthDay},
  	#{memberEmail}, 1, to_char(sysdate,'yyyy-mm-dd'), #{memberGender}, NULL, NULL, #{social})
  </insert>
  
  <!-- 비밀번호 찾기 -->
  <select id="selectPw" parameterType="m" resultType="m">
  	select
  		member_id as memberId,
  		member_pw as memberPw,
  		member_email as memberEmail
  	from member where member_Id=#{memberId}
  </select>
  
  <!-- Modal창 아이디, 가입일 찾기 -->
  <select id="searchId" parameterType="m" resultType="m">
  	select
  		member_id as memberId, enroll_date as enrollDate
  	from member where member_name=#{memberName} and member_phone=#{memberPhone}
  </select>
  
  <!-- 회원정보 수정 -->
  <update id="updateMember" parameterType="m">
  	update member set 
  		member_phone=#{memberPhone}, member_email=#{memberEmail}, member_filename=#{memberFilename}, member_filepath=#{memberFilepath}
  	where member_id=#{memberId}
  </update>
  
  <!-- 회원 탈퇴 -->
  <delete id="deleteMember" parameterType="_int">
  	delete from member where member_no=#{_parameter}
  </delete>
  
  <!-- 마이페이지 → pw 변경 -->
  <update id="updatePw" parameterType="m">
  	update member set member_pw=#{memberPw} where member_id=#{memberId}
  </update>
  
  <!-- 아이디 중복체크 버튼 -->
  <select id="selectId" parameterType="m" resultType="m">
  	select
  		member_no as memberNo,
  		member_id as memberId,
  		member_pw  as memberPw,
  		member_name as memberName,
  		member_phone as memberPhone,
  		member_birth_year as memberBirthYear,
  		member_birth_month as memberBirthMonth,
  		member_birth_day as memberBirthDay,
  		member_email as memberEmail,
  		member_level as memberLevel,
  		enroll_date as enrollDate,
  		member_gender as memberGender,
  		member_filename as memberFilename,
  		member_filepath as memberFilepath
  	from member where member_id=#{memberId}
  </select>
  
  <!-- 임시비밀번호로 pw 변경 -->
  <update id="updatePwMember" parameterType="m">
  	update member set member_pw=#{memberPw} where member_id=#{memberId}
  </update>
  
  <!-- 카카오 로그인 -->
  <select id="selectOneKakao" parameterType="m" resultType="m">
    	select 
  		member_no as memberNo,
  		member_id as memberId,
  		member_pw  as memberPw,
  		member_name as memberName,
  		member_phone as memberPhone,
  		member_birth_year as memberBirthYear,
  		member_birth_month as memberBirthMonth,
  		member_birth_day as memberBirthDay,
  		member_email as memberEmail,
  		member_level as memberLevel,
  		enroll_date as enrollDate,
  		member_gender as memberGender,
  		member_filename as memberFilename,
  		member_filepath as memberFilepath,
  		social as social
  	from member where member_id=#{memberId}
  </select>
  
  <!-- 네이버 로그인 -->
    <select id="selectOneNaver" parameterType="m" resultType="m">
    	select 
  		member_no as memberNo,
  		member_id as memberId,
  		member_pw  as memberPw,
  		member_name as memberName,
  		member_phone as memberPhone,
  		member_birth_year as memberBirthYear,
  		member_birth_month as memberBirthMonth,
  		member_birth_day as memberBirthDay,
  		member_email as memberEmail,
  		member_level as memberLevel,
  		enroll_date as enrollDate,
  		member_gender as memberGender,
  		member_filename as memberFilename,
  		member_filepath as memberFilepath,
  		social as social
  	from member where member_id=#{memberId}
  </select>
  
  <!-- 배송지 정보 조회 -->
  <select id="shopAddress" parameterType="_int" resultType="sa">
  	select
  		SA_NO as saNo,
  		MEMBER_NO as memberNo,
  		ADDRESS_NEW as addressNew,
  		ADDRESS_NAME as addressName,
  		ADDRESS_PHONE as addressPhone
  	FROM SHIPPING_ADDRESS WHERE MEMBER_NO=#{memberNo}
  </select>
  
  <!-- 예매/구매 내역 조회 -->
  <select id="selectBookList" parameterType="map" resultMap="selectInfo">
		select * from
			(select rownum as rnum, r.* from
			    (select 
				    pay_no,
				    pay_price,
				    (select movie_title from schedule_tbl where schedule_no=(select distinct schedule_no from ticketing_tbl s where s.pay_no=p.pay_no)) movie_title,
				    (select to_char(schedule_start,'yyyy-mm-dd') from schedule_tbl where schedule_no=(select distinct schedule_no from ticketing_tbl s where s.pay_no=p.pay_no)) movie_date,
				(select to_char(schedule_start,'hh24:mi') from schedule_tbl where schedule_no=(select distinct schedule_no from ticketing_tbl s where s.pay_no=p.pay_no)) start_time,
				(select to_char(schedule_end,'hh24:mi') from schedule_tbl where schedule_no=(select distinct schedule_no from ticketing_tbl s where s.pay_no=p.pay_no)) end_timeDate,
				(select theater_branch from schedule_tbl where schedule_no=(select distinct schedule_no from ticketing_tbl s where s.pay_no=p.pay_no)) as theater_branch
				from pay p
				where member_no=#{memberNo} and pay_status=1 order by 1 desc) r)
		where rnum between #{start} and #{end}
  </select>
  
  <select id="selectPeople" parameterType="_int" resultType="people">
  	select decode(ticketing_age,1,'성인',2,'청소년',3,'우대') as people ,count(ticketing_age) as cnt from ticketing_tbl where pay_no=#{_parameter} group by ticketing_age order by ticketing_age
  </select>
  
  <select id="selectSeat" parameterType="_int" resultType="string">
  	select seat from ticketing_tbl where pay_no=#{_parameter}
  </select>
  
  <resultMap type="reservation" id="selectInfo">
  	<result column="pay_no" property="payNo" />
  	<result column="pay_price" property="payPrice" />
  	<result column="movie_title" property="movieTitle" />
  	<result column="movie_date" property="movieDate" />
  	<result column="start_time" property="startTime" />
  	<result column="end_timeDate" property="endTime" />
  	<result column="theater_branch" property="theaterBranch" />
  	<collection property="list"
  				select="selectPeople"
  				column="pay_no"
  				ofType="people"
  				javaType="java.util.ArrayList" />
  	
  	<collection property="seat"
  				select="selectSeat"
  				column="pay_no"
  				ofType="string"
  				javaType="java.util.ArrayList"/>
  </resultMap>  
  
  <!-- 전체 예매 내역 수 조회 -->
  <select id="totalCount" resultType="_int">
  	select count(*) from TICKETING_TBL
  </select>
  
      <!-- 예매/구매 취소내역 조회 -->
  <select id="selectCancelBookList" parameterType="map" resultMap="selectInfo2">
		select * from
			(select rownum as rnum, r.* from
			    (select 
				    pay_no,
				    pay_price,
				    (select movie_title from schedule_tbl where schedule_no=(select distinct schedule_no from ticketing_tbl s where s.pay_no=p.pay_no)) movie_title,
				    (select to_char(schedule_start,'yyyy-mm-dd') from schedule_tbl where schedule_no=(select distinct schedule_no from ticketing_tbl s where s.pay_no=p.pay_no)) movie_date,
				(select theater_branch from schedule_tbl where schedule_no=(select distinct schedule_no from ticketing_tbl s where s.pay_no=p.pay_no)) as theater_branch
				from pay p
				where member_no=#{memberNo} and pay_status=2 order by 1 desc) r)
		where rnum between #{start} and #{end}
  </select>
  
  <select id="selectPeople2" parameterType="_int" resultType="people">
  	select decode(ticketing_age,1,'성인',2,'청소년',3,'우대') as people ,count(ticketing_age) as cnt from ticketing_tbl where pay_no=#{_parameter} group by ticketing_age order by ticketing_age
  </select>
  
  <select id="selectSeat2" parameterType="_int" resultType="string">
  	select seat from ticketing_tbl where pay_no=#{_parameter}
  </select>
  
  <resultMap type="reservationCancel" id="selectInfo2">
  	<result column="pay_no" property="payNo" />
  	<result column="pay_price" property="payPrice" />
  	<result column="movie_title" property="movieTitle" />
  	<result column="movie_date" property="movieDate" />
  	<result column="theater_branch" property="theaterBranch" />
  	<collection property="list"
  				select="selectPeople2"
  				column="pay_no"
  				ofType="people"
  				javaType="java.util.ArrayList" />
  	
  	<collection property="seat"
  				select="selectSeat2"
  				column="pay_no"
  				ofType="string"
  				javaType="java.util.ArrayList"/>
  </resultMap>
  
  <!-- 전체 취소 예매 내역 수 조회 -->
    <select id="totalCancelCount" resultType="_int">
  	select count(*) from TICKETING_TBL
  </select>
  
</mapper>
